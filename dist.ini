name    = ExtUtils-Manifest
author  = Andreas Koenig <andreas.koenig@anima.de>
author  = Michael G Schwern <schwern@pobox.com>
author  = Randy Kobes <r.kobes@uwinnipeg.ca>
author  = The Perl 5 Porters
license = Perl_5
copyright_holder = Andreas Koenig

[RewriteVersion]
[PodVersion]

[OnlyCorePrereqs]
:version = 0.014
check_dual_life_versions = 0

[DualLife]
:version = 0.04
eumm_bundled=1

[MetaResources]
repository.type   = git
repository.url    = git://github.com/Perl-Toolchain-Gang/Extutils-Manifest.git
repository.web    = http://github.com/Perl-Toolchain-Gang/Extutils-Manifest
bugtracker.web    = http://github.com/Perl-Toolchain-Gang/ExtUtils-Manifest/issues
homepage          = https://metacpan.org/release/ExtUtils-Manifest
x_IRC = irc://irc.perl.org/#toolchain
x_MailingList = http://lists.perl.org/list/cpan-workers.html

[PromptIfStale / stale modules, release]
phase = release
check_all_plugins = 1
check_all_prereqs = 1

[Git::GatherDir]
:version = 2.016
exclude_filename = README.pod
exclude_filename = LICENSE

[MetaYAML]
[MetaJSON]
[License]
[Readme]
[Manifest]

[InstallGuide]

[Test::Compile]
:version = 2.039
bail_out_on_fail = 1
xt_mode = 1

[MetaTests]
:version = 0.008
[Test::ChangesHasContent]
[Test::MinimumVersion]
:version = 2.000003
max_target_perl = 5.006
[PodSyntaxTests]
[Test::Pod::No404s]
[MojibakeTests]
[Test::ReportPrereqs]
:version = 0.019
verify_prereqs = 1
[Test::Portability]

[NextRelease]
:version = 4.300018
time_zone = UTC
format = %-4v  %{yyyy-MM-dd}d

[ReadmeAnyFromPod]
:version = 0.142180
type = pod
location = root
phase = release

[Authority]
authority = cpan:P5P
do_metadata = 1
do_munging = 0

[MetaProvides::Package]
meta_noindex = 1
:version = 1.15000002
finder = :InstallModules

[MetaConfig]
[Git::Contributors]
:version = 0.004
order_by = commits

[AutoPrereqs]
[Prereqs::AuthorDeps]
[MinimumPerl]
:version = 1.006

[RemovePrereqs]
remove = VMS::Feature
remove = VMS::Filespec

[MakeMaker]
eumm_version = 0

[CheckSelfDependency]

[CheckStrictVersion]
decimal_only = 1

[Git::Check]
allow_dirty =

[Git::Remote::Check]
branch = master
remote_branch = master

[CheckPrereqsIndexed]
[TestRelease]
[RunExtraTests]
:version = 0.024

[CheckIssues]

[UploadToCPAN]

[GitHub::Update]
metacpan = 1

[CopyFilesFromRelease]
filename = LICENSE
; filename = Changes  ; TODO: when NextRelease is smarter

[Git::Commit / release snapshot]
add_files_in = .
allow_dirty = README.pod
allow_dirty = LICENSE
allow_dirty = Changes
commit_msg = %N-%v%t%n%n%c

[Git::Tag]
tag_format = %v%t
tag_message = v%v%t

[BumpVersionAfterRelease]

[Git::Commit / bumped $VERSION after release]
add_files_in = .
allow_dirty = Changes   ; for now, there is no change here - it was committed in the release snapshot
allow_dirty_match = ^lib
commit_msg = After release: bump $VERSION and timestamp Changes

[Git::Push]

; loaded last, to ensure it runs as the last BeforeRelease plugin
[ConfirmRelease]
